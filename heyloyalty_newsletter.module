<?php
/**
 * @file
 *
 * Code related to Heyloyalty newsletter system.
 */

/**
 * Implements hook_menu().
 * 
 * Add path for content feed.
 */
function heyloyalty_newsletter_menu() {
  $items = array();

  $items['feed/json/node/course'] = array(
    'page callback' => '_heyloyalty_newsletter_feed_json_course',
    'access arguments' => array(
      'access content',
    )
  );

  $items['feed/json/node/news'] = array(
    'page callback' => '_heyloyalty_newsletter_feed_json_news',
    'access arguments' => array(
      'access content',
    )
  );

  return $items;
}

/**
 * Implements hook_ctools_plugin_api().
 */
function heyloyalty_newsletter_ctools_plugin_api($module, $api) {
  if ($module == "ctools_custom_content" && $api == "ctools_content") {
    return array("version" => "1");
  }
}

/**
 * Implements hook_theme().
 */
function heyloyalty_newsletter_theme() {
  return array(
    'heyloyalty_pane_content' => array(
      'template' => 'heyloyalty-pane-content',
      'variables' => array('iframe' => NULL, 'height' => NULL),
      'path' => drupal_get_path('module', 'heyloyalty_newsletter') . '/templates'
    ),
    'heyloyalty_block_content' => array(
      'template' => 'heyloyalty-block-content',
      'variables' => array('iframe' => NULL, 'height' => NULL),
      'path' => drupal_get_path('module', 'heyloyalty_newsletter') . '/templates'
    ),
  );
}

/**
 * Implements hook_block_info().
 */
function heyloyalty_newsletter_block_info() {
  $blocks['heyloyalty-newsletter-signup'] = array(
    'info' => t('Heyloyalty signup'),
    'cache' => DRUPAL_NO_CACHE,
  );
  return $blocks;
}

/**
 * Implements hook_block_view().
 */
function heyloyalty_newsletter_block_view($delta = '') {
  $body_content = [
    '#theme' => 'heyloyalty_block_content',
    '#name' => 'heyloyalty_signup',
    '#iframe' => variable_get('heyloyalty_signup', '')['value'],
    '#height' => variable_get('heyloyalty_signup_height_sidebar', ''),
  ];

  $block = array();
  switch ($delta) {
    case 'heyloyalty-newsletter-signup':
      $block['subject'] = t('Heyloyalty signup');
      $block['content'] = $body_content;
      break;
  }
  return $block;
}

/**
 * Implements hook_form_FORMID_alter().
 */
function heyloyalty_newsletter_form__ulf_admin_panel_form_alter(&$form, &$form_state) {
  $form['heyloyalty'] = array(
    '#type' => 'fieldset',
    '#title' => t('Heyloyalty'),
    '#weight' => 12,
    '#collapsible' => TRUE,
    '#group' => 'ulf_admin_panel',
  );
  $form['heyloyalty']['heyloyalty_signup'] = array(
    '#type' => 'text_format',
    '#title' => t('Newsletter signup iframe'),
    '#description' => t('The newsletter signup iframe embed code from Heyloyalty'),
    '#default_value' => !empty(variable_get('heyloyalty_signup', '')['value']) ? variable_get('heyloyalty_signup', '')['value'] : '',
    '#format' => 'full_html',
    '#attributes' => array('placeholder' => array('<iframe frameborder="0" width="600" height="600" src="https://app.heyloyalty.com/subscribe/ABC/XYZ"></iframe>'))
  );
  $form['heyloyalty']['heyloyalty_signup_height'] = array(
    '#type' => 'textfield',
    '#size' => 60,
    '#title' => t('Newsletter signup iframe height'),
    '#description' => t('The iframe height has to be set manually since drupal has no way of knowing the content within the iframe.'),
    '#default_value' => !empty(variable_get('heyloyalty_signup_height', '')) ? variable_get('heyloyalty_signup_height', '') : '',
    '#attributes' => array('placeholder' => array('325px'))
  );
  $form['heyloyalty']['heyloyalty_signup_enable_sidebar'] = array(
    '#type' => 'checkbox',
    '#title' => t('Enable sidebar signup on static pages'),
    '#description' => t('Check this to show sidebar signup iframe on static pages.'),
    '#default_value' => variable_get('heyloyalty_signup_enable_sidebar', '')
  );
  $form['heyloyalty']['heyloyalty_signup_height_sidebar'] = array(
    '#type' => 'textfield',
    '#size' => 60,
    '#title' => t('Newsletter signup iframe height (sidebar)'),
    '#description' => t('The iframe height has to be set manually since drupal has no way of knowing the content within the iframe.'),
    '#default_value' => !empty(variable_get('heyloyalty_signup_height_sidebar', '')) ? variable_get('heyloyalty_signup_height_sidebar', '') : '',
    '#attributes' => array('placeholder' => array('325px'))
  );
}

/**
 * Provide a json feed with courses for newsletter.
 *
 * @return array
 *   An array of items to display in the feed.
 */
function _heyloyalty_newsletter_feed_json_course() {
  $content_types = array(
    'course',
    'course_educators'
  );

  $cache_label = 'heyloyalty_feed_data_course';

  $newsletter_nodes = _heyloyalty_newsletter_get_nodes($content_types, $cache_label, 'course');

  drupal_json_output($newsletter_nodes);
  drupal_exit();
}


/**
 * Provide a json feed with news for newsletter.
 *
 * @return array
 *   An array of items to display in the feed.
 */
function _heyloyalty_newsletter_feed_json_news() {
  $content_types = array(
    'news',
    'news_course_provider'
  );

  $cache_label = 'heyloyalty_feed_data_news';

  $newsletter_nodes = _heyloyalty_newsletter_get_nodes($content_types, $cache_label, 'news');

  drupal_json_output($newsletter_nodes);
  drupal_exit();
}

/**
 * Get a list of nodes from an entity query.
 *
 * @param $content_types
 *   The types of nodes to get.
 * @param $cache_label
 *   The name of the cache store.
 * @param $context
 *   The origin of the call.
 *
 * @return array
 *   An array of nodes and som specific fields.
 */
function _heyloyalty_newsletter_get_nodes($content_types, $cache_label, $context) {
  $base_url = $GLOBALS['base_url'];

  // Cache the page.
  $newsletter_nodes = &drupal_static(__FUNCTION__);
  if (!isset($newsletter_nodes)) {
    if ($cache = cache_get($cache_label)) {
      $newsletter_nodes = $cache->data;
    }
    else {
      // Fetch the relevant nodes.
      $node_query = new EntityFieldQuery();
      $node_query->entityCondition('entity_type', 'node');
      $node_query->entityCondition('bundle', $content_types, 'IN');
      $node_query->propertyCondition('status', 1);
      $res = $node_query->execute();

      $newsletter_nodes = array();
      foreach ($res['node'] as $value) {
        $wrapper = entity_metadata_wrapper('node', $value->nid);
        $node = array(
          'Produktid' => $value->nid,
          'Produktnavn' => $wrapper->title->value(array('sanitize' => TRUE)),
          'BilledeUrl' => isset($wrapper->field_image->value()['0']) ? image_style_url('node_display', $wrapper->field_image->value()['0']['uri']) : '',
          'BilledeUrlTeaser' => isset($wrapper->field_image->value()['0']) ? image_style_url('teaser_display', $wrapper->field_image->value()['0']['uri']) : '',
          'Url' => $base_url . '/' .drupal_get_path_alias('node/' . $value->nid),
          'BaseUrl' => $base_url,
          'Author' => $wrapper->author->field_profile_name->value(),
          'AuthorUrl' => $wrapper->author->uid->value(),
        );

        // Add specific fields for courses
        if ($context == 'course') {
          $node['Beskrivelse'] = !empty($wrapper->field_full_description->value()['safe_value']) ? $wrapper->field_full_description->value()['safe_value'] : '';
          $stripped_descr = strip_tags($node['Beskrivelse']);
          $node['KategoriNavn'] = $wrapper->field_subject->label();
          $node['Gratis'] = $wrapper->field_free->value() ? 'free' : 'not_free';
          $node['targetGroup'] = !empty($wrapper->field_target_group) ? $wrapper->field_target_group->label() : 'Kursus';
          $node['targetGroupSub'] = !empty($wrapper->field_target_group_sub) ? _heyloyalty_newsletter_render_target_group_sub($wrapper->field_target_group_sub->value()) : '';
          $node['Beskrivelse_cut'] = strlen($stripped_descr) > 254 ? preg_replace('/\s+?(\S+)?$/', '', mb_substr($stripped_descr, 0, 251)) . '...' : $stripped_descr;
        }

        // Add specific fields for news
        if ($context == 'news') {
          $node['Beskrivelse'] = !empty($wrapper->field_content->value()['safe_value']) ? $wrapper->field_content->value()['safe_value'] : '';
          $stripped_descr = strip_tags($node['Beskrivelse']);
          $node['Beskrivelse_cut'] = strlen($stripped_descr) > 254 ? preg_replace('/\s+?(\S+)?$/', '', mb_substr($stripped_descr, 0, 251)) . '...' : $stripped_descr;
          $node['Manchet'] = !empty($wrapper->field_teaser->value()) ? $wrapper->field_teaser->value() : '';
        }

        // Add node to array
        $newsletter_nodes[] = $node;
      }
      cache_set($cache_label, $newsletter_nodes, 'cache', CACHE_TEMPORARY);
    }
  }
  return $newsletter_nodes;
}



/**
 * Implements hook_views_post_render().
 */
function _heyloyalty_newsletter_render_target_group_sub($target_groups) {
  $classes = [];
  $years = [];
  $other_results = [];
  $output = '';

  foreach ($target_groups as $value) {
    $name = $value->name;

    if (preg_match('/.{1,2} år/', $name) ) {
      $years[] = str_replace('. år', '', $name);
    }
    else if (preg_match('/.{1,2}\. klasse/', $name) ) {
      $classes[] = str_replace('. klasse', '', $name);
    }
    else {
      $other_results[] = $name;
    }
  }

  $ranges = _ulf_default_create_ranges($classes, '. klasse', '. - ');
  $yearRanges = _ulf_default_create_ranges($years, ' år');

  if (!empty($ranges)) {
    $output .= implode('<br>', $ranges) . '<br>';
  }

  if (!empty($yearRanges)) {
    $output .= implode('<br>', $yearRanges) . '<br>';
  }

  if (!empty($other_results)) {
    $output .= implode('<br>', $other_results);
  }


  return $output;
}
